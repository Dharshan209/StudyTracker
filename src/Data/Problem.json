[
  {
    "title": "Two Sum",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Apple", "Uber", "Lyft", "Airbnb"],
    "difficulty": "Easy",
    "topics": ["Array", "Hash Table"],
    "visualization": "https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",
    "youtube": "https://www.youtube.com/watch?v=KLlXCFG5TnA"
  },
  {
    "title": "Add Two Numbers",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Apple"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Math", "Recursion"]
  },
  {
    "title": "Longest Substring Without Repeating Characters",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Apple", "Uber"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "String", "Sliding Window"]
  },
  {
    "title": "Median of Two Sorted Arrays",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Apple"],
    "difficulty": "Hard",
    "topics": ["Array", "Binary Search", "Divide and Conquer"]
  },
  {
    "title": "Longest Palindromic Substring",
    "company": ["Google", "Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["String", "Dynamic Programming"]
  },
  {
    "title": "Reverse Integer",
    "company": ["Google", "Apple"],
    "difficulty": "Easy",
    "topics": ["Math"]
  },
  {
    "title": "String to Integer (atoi)",
    "company": ["Google", "Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["String", "Math"]
  },
  {
    "title": "Palindrome Number",
    "company": ["Google", "Facebook"],
    "difficulty": "Easy",
    "topics": ["Math"]
  },
  {
    "title": "Regular Expression Matching",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Uber"],
    "difficulty": "Hard",
    "topics": ["String", "Dynamic Programming", "Recursion"]
  },
  {
    "title": "Container With Most Water",
    "company": ["Google", "Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Two Pointers"]
  },
  {
    "title": "Integer to Roman",
    "company": ["Google", "Facebook", "Twitter"],
    "difficulty": "Medium",
    "topics": ["Math", "String"]
  },
  {
    "title": "Roman to Integer",
    "company": ["Google", "Facebook", "Microsoft", "Uber"],
    "difficulty": "Easy",
    "topics": ["Hash Table", "Math", "String"]
  },
  {
    "title": "Longest Common Prefix",
    "company": ["Google", "Facebook"],
    "difficulty": "Easy",
    "topics": ["String"]
  },
  {
    "title": "3Sum",
    "company": ["Google", "Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Two Pointers", "Sorting"]
  },
  {
    "title": "3Sum Closest",
    "company": ["Google", "Facebook"],
    "difficulty": "Medium",
    "topics": ["Array", "Two Pointers", "Sorting"]
  },
  {
    "title": "Letter Combinations of a Phone Number",
    "company": ["Google", "Facebook", "Amazon", "Uber"],
    "difficulty": "Medium",
    "topics": ["String", "Backtracking"]
  },
  {
    "title": "4Sum",
    "company": ["Google", "Facebook"],
    "difficulty": "Medium",
    "topics": ["Array", "Two Pointers", "Sorting"]
  },
  {
    "title": "Remove Nth Node From End of List",
    "company": ["Google", "Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Two Pointers"]
  },
  {
    "title": "Valid Parentheses",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Uber"],
    "difficulty": "Easy",
    "topics": ["String", "Stack"]
  },
  {
    "title": "Merge Two Sorted Lists",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Apple"],
    "difficulty": "Easy",
    "topics": ["Linked List", "Recursion"]
  },
  {
    "title": "Generate Parentheses",
    "company": ["Google", "Facebook", "Uber"],
    "difficulty": "Medium",
    "topics": ["String", "Backtracking", "Dynamic Programming"]
  },
  {
    "title": "Merge k Sorted Lists",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Uber"],
    "difficulty": "Hard",
    "topics": ["Linked List", "Heap (Priority Queue)", "Divide and Conquer", "Merge Sort"]
  },
  {
    "title": "Swap Nodes in Pairs",
    "company": ["Google", "Facebook", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Recursion"]
  },
  {
    "title": "Reverse Nodes in k-Group",
    "company": ["Google", "Facebook", "Amazon", "Microsoft"],
    "difficulty": "Hard",
    "topics": ["Linked List", "Recursion"]
  },
  {
    "title": "Remove Duplicates from Sorted Array",
    "company": ["Google", "Facebook", "Microsoft"],
    "difficulty": "Easy",
    "topics": ["Array", "Two Pointers"]
  },
  {
    "title": "Remove Element",
    "company": ["Google", "Facebook"],
    "difficulty": "Easy",
    "topics": ["Array", "Two Pointers"]
  },
  {
    "title": "Implement strStr()",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Apple"],
    "difficulty": "Easy",
    "topics": ["String", "Two Pointers"]
  },
  {
    "title": "Divide Two Integers",
    "company": ["Google", "Facebook", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Math", "Bit Manipulation"]
  },
  {
    "title": "Substring with Concatenation of All Words",
    "company": ["Google", "Facebook"],
    "difficulty": "Hard",
    "topics": ["Hash Table", "String", "Sliding Window"]
  },
  {
    "title": "Next Permutation",
    "company": ["Google"],
    "difficulty": "Medium",
    "topics": ["Array", "Two Pointers"]
  },
  {
    "title": "Longest Valid Parentheses",
    "company": ["Google", "Facebook", "Amazon"],
    "difficulty": "Hard",
    "topics": ["String", "Stack", "Dynamic Programming"]
  },
  {
    "title": "Search in Rotated Sorted Array",
    "company": ["Google", "Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search"]
  },
  {
    "title": "Find First and Last Position of Element in Sorted Array",
    "company": ["Google", "Facebook", "LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search"]
  },
  {
    "title": "Search Insert Position",
    "company": ["Google"],
    "difficulty": "Easy",
    "topics": ["Array", "Binary Search"]
  },
  {
    "title": "Valid Sudoku",
    "company": ["Amazon", "Uber", "Snapchat"],
    "difficulty": "Medium",
    "topics": ["Array", "Hash Table", "Matrix"]
  },
  {
    "title": "Sudoku Solver",
    "company": ["Google", "Facebook", "Uber"],
    "difficulty": "Hard",
    "topics": ["Array", "Backtracking", "Matrix"]
  },
  {
    "title": "Count and Say",
    "company": ["Facebook"],
    "difficulty": "Easy",
    "topics": ["String"]
  },
  {
    "title": "Combination Sum",
    "company": ["Facebook", "Uber", "Airbnb"],
    "difficulty": "Medium",
    "topics": ["Array", "Backtracking"]
  },
  {
    "title": "Combination Sum II",
    "company": ["Facebook"],
    "difficulty": "Medium",
    "topics": ["Array", "Backtracking"]
  },
  {
    "title": "First Missing Positive",
    "company": ["Google", "Amazon", "Microsoft"],
    "difficulty": "Hard",
    "topics": ["Array", "Hash Table"]
  },
  {
    "title": "Trapping Rain Water",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Apple"],
    "difficulty": "Hard",
    "topics": ["Array", "Two Pointers", "Dynamic Programming", "Stack", "Monotonic Stack"]
  },
  {
    "title": "Multiply Strings",
    "company": ["Facebook", "Twitter"],
    "difficulty": "Medium",
    "topics": ["Math", "String"]
  },
  {
    "title": "Wildcard Matching",
    "company": ["Google", "Facebook", "Amazon"],
    "difficulty": "Hard",
    "topics": ["String", "Dynamic Programming", "Greedy", "Recursion"]
  },
  {
    "title": "Jump Game II",
    "company": ["Amazon"],
    "difficulty": "Hard",
    "topics": ["Array", "Greedy"]
  },
  {
    "title": "Permutations",
    "company": ["Facebook", "Microsoft", "LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Array", "Backtracking"]
  },
  {
    "title": "Permutations II",
    "company": ["Facebook", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Backtracking"]
  },
  {
    "title": "Rotate Image",
    "company": ["Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Math", "Matrix"]
  },
  {
    "title": "Group Anagrams",
    "company": ["Facebook", "Amazon", "Uber", "Yelp"],
    "difficulty": "Medium",
    "topics": ["Array", "Hash Table", "String", "Sorting"]
  },
  {
    "title": "Pow(x, n)",
    "company": ["Google", "Facebook", "LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Math", "Recursion"]
  },
  {
    "title": "N-Queens",
    "company": ["Facebook", "Amazon"],
    "difficulty": "Hard",
    "topics": ["Array", "Backtracking"]
  },
  {
    "title": "N-Queens II",
    "company": ["Facebook"],
    "difficulty": "Hard",
    "topics": ["Backtracking"]
  },
  {
    "title": "Maximum Subarray",
    "company": ["Facebook", "Microsoft", "LinkedIn"],
    "difficulty": "Easy",
    "topics": ["Array", "Divide and Conquer", "Dynamic Programming"]
  },
  {
    "title": "Spiral Matrix",
    "company": ["Microsoft", "Uber"],
    "difficulty": "Medium",
    "topics": ["Array", "Matrix", "Simulation"]
  },
  {
    "title": "Jump Game",
    "company": ["Facebook"],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming", "Greedy"]
  },
  {
    "title": "Merge Intervals",
    "company": ["Google", "Facebook", "Microsoft", "LinkedIn", "Twitter"],
    "difficulty": "Medium",
    "topics": ["Array", "Sorting"]
  },
  {
    "title": "Insert Interval",
    "company": ["Google", "Facebook", "LinkedIn"],
    "difficulty": "Hard",
    "topics": ["Array", "Sorting"]
  },
  {
    "title": "Length of Last Word",
    "company": [],
    "difficulty": "Easy",
    "topics": ["String"]
  },
  {
    "title": "Spiral Matrix II",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Matrix", "Simulation"]
  },
  {
    "title": "Permutation Sequence",
    "company": ["Twitter"],
    "difficulty": "Hard",
    "topics": ["Math", "Recursion"]
  },
  {
    "title": "Rotate List",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Two Pointers"]
  },
  {
    "title": "Unique Paths",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Math", "Dynamic Programming", "Combinatorics"]
  },
  {
    "title": "Unique Paths II",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Minimum Path Sum",
    "company": ["Google"],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Valid Number",
    "company": ["Facebook", "LinkedIn"],
    "difficulty": "Hard",
    "topics": ["String"]
  },
  {
    "title": "Plus One",
    "company": ["Google"],
    "difficulty": "Easy",
    "topics": ["Array", "Math"]
  },
  {
    "title": "Add Binary",
    "company": ["Facebook"],
    "difficulty": "Easy",
    "topics": ["Math", "String", "Bit Manipulation"]
  },
  {
    "title": "Text Justification",
    "company": ["Facebook", "LinkedIn", "Airbnb"],
    "difficulty": "Hard",
    "topics": ["String", "Simulation"]
  },
  {
    "title": "Sqrt(x)",
    "company": ["Facebook", "Apple"],
    "difficulty": "Easy",
    "topics": ["Math", "Binary Search"]
  },
  {
    "title": "Climbing Stairs",
    "company": ["Apple", "Adobe"],
    "difficulty": "Easy",
    "topics": ["Math", "Dynamic Programming", "Memoization"]
  },
  {
    "title": "Simplify Path",
    "company": ["Facebook"],
    "difficulty": "Medium",
    "topics": ["String", "Stack"]
  },
  {
    "title": "Edit Distance",
    "company": ["Google", "Facebook"],
    "difficulty": "Hard",
    "topics": ["String", "Dynamic Programming"]
  },
  {
    "title": "Set Matrix Zeroes",
    "company": ["Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Hash Table", "Matrix"]
  },
  {
    "title": "Search a 2D Matrix",
    "company": ["Amazon"],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search", "Matrix"]
  },
  {
    "title": "Sort Colors",
    "company": ["Facebook", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Two Pointers", "Sorting"]
  },
  {
    "title": "Minimum Window Substring",
    "company": ["Facebook", "Amazon", "LinkedIn", "Uber"],
    "difficulty": "Hard",
    "topics": ["Hash Table", "String", "Sliding Window"]
  },
  {
    "title": "Combinations",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Backtracking"]
  },
  {
    "title": "Subsets",
    "company": ["Facebook", "Amazon", "Uber"],
    "difficulty": "Medium",
    "topics": ["Array", "Backtracking", "Bit Manipulation"]
  },
  {
    "title": "Word Search",
    "company": ["Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Backtracking", "Matrix"]
  },
  {
    "title": "Remove Duplicates from Sorted Array II",
    "company": ["Facebook"],
    "difficulty": "Medium",
    "topics": ["Array", "Two Pointers"]
  },
  {
    "title": "Search in Rotated Sorted Array II",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search"]
  },
  {
    "title": "Remove Duplicates from Sorted List II",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Linked List", "Two Pointers"]
  },
  {
    "title": "Remove Duplicates from Sorted List",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Linked List"]
  },
  {
    "title": "Largest Rectangle in Histogram",
    "company": ["Google", "Amazon"],
    "difficulty": "Hard",
    "topics": ["Array", "Stack", "Monotonic Stack"]
  },
  {
    "title": "Maximal Rectangle",
    "company": ["Google"],
    "difficulty": "Hard",
    "topics": ["Array", "Dynamic Programming", "Stack", "Matrix", "Monotonic Stack"]
  },
  {
    "title": "Partition List",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Linked List", "Two Pointers"]
  },
  {
    "title": "Scramble String",
    "company": [],
    "difficulty": "Hard",
    "topics": ["String", "Dynamic Programming"]
  },
  {
    "title": "Merge Sorted Array",
    "company": ["Facebook", "Microsoft"],
    "difficulty": "Easy",
    "topics": ["Array", "Two Pointers", "Sorting"]
  },
  {
    "title": "Gray Code",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Math", "Bit Manipulation", "Recursion"]
  },
  {
    "title": "Subsets II",
    "company": ["Facebook"],
    "difficulty": "Medium",
    "topics": ["Array", "Backtracking"]
  },
  {
    "title": "Decode Ways",
    "company": ["Facebook", "Microsoft", "Uber"],
    "difficulty": "Medium",
    "topics": ["String", "Dynamic Programming"]
  },
  {
    "title": "Reverse Linked List II",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Linked List"]
  },
  {
    "title": "Restore IP Addresses",
    "company": [],
    "difficulty": "Medium",
    "topics": ["String", "Backtracking"]
  },
  {
    "title": "Binary Tree Inorder Traversal",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Tree", "Binary Tree", "Depth-First Search", "Stack", "Recursion"]
  },
  {
    "title": "Unique Binary Search Trees II",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Tree", "Binary Search Tree", "Dynamic Programming", "Recursion"]
  },
  {
    "title": "Unique Binary Search Trees",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Math", "Dynamic Programming", "Tree", "Binary Search Tree"]
  },
  {
    "title": "Interleaving String",
    "company": ["Google"],
    "difficulty": "Hard",
    "topics": ["String", "Dynamic Programming"]
  },
  {
    "title": "Validate Binary Search Tree",
    "company": ["Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Tree", "Binary Search Tree", "Depth-First Search", "Binary Tree"]
  },
  {
    "title": "Recover Binary Search Tree",
    "company": ["Google"],
    "difficulty": "Hard",
    "topics": ["Tree", "Binary Search Tree", "Depth-First Search", "Binary Tree", "Morris Traversal"]
  },
  {
    "title": "Same Tree",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Symmetric Tree",
    "company": ["Microsoft", "LinkedIn"],
    "difficulty": "Easy",
    "topics": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Binary Tree Level Order Traversal",
    "company": ["Facebook", "Amazon", "Microsoft", "Apple", "LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Tree", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Binary Tree Zigzag Level Order Traversal",
    "company": ["Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Tree", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Maximum Depth of Binary Tree",
    "company": ["Uber", "LinkedIn"],
    "difficulty": "Easy",
    "topics": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Construct Binary Tree from Preorder and Inorder Traversal",
    "company": ["Amazon"],
    "difficulty": "Medium",
    "topics": ["Array", "Hash Table", "Divide and Conquer", "Tree", "Binary Tree"]
  },
  {
    "title": "Construct Binary Tree from Inorder and Postorder Traversal",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Array", "Hash Table", "Divide and Conquer", "Tree", "Binary Tree"]
  },
  {
    "title": "Binary Tree Level Order Traversal II",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Tree", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Convert Sorted Array to Binary Search Tree",
    "company": ["Airbnb"],
    "difficulty": "Easy",
    "topics": ["Array", "Divide and Conquer", "Tree", "Binary Search Tree", "Binary Tree"]
  },
  {
    "title": "Convert Sorted List to Binary Search Tree",
    "company": ["Airbnb"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Divide and Conquer", "Tree", "Binary Search Tree", "Binary Tree"]
  },
  {
    "title": "Balanced Binary Tree",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Tree", "Depth-First Search", "Binary Tree"]
  },
  {
    "title": "Minimum Depth of Binary Tree",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Path Sum",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Path Sum II",
    "company": ["Amazon"],
    "difficulty": "Medium",
    "topics": ["Tree", "Backtracking", "Depth-First Search", "Binary Tree"]
  },
  {
    "title": "Flatten Binary Tree to Linked List",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Stack", "Tree", "Depth-First Search", "Binary Tree"]
  },
  {
    "title": "Distinct Subsequences",
    "company": [],
    "difficulty": "Hard",
    "topics": ["String", "Dynamic Programming"]
  },
  {
    "title": "Populating Next Right Pointers in Each Node",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Populating Next Right Pointers in Each Node II",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Pascal's Triangle",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Pascal's Triangle II",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Array"]
  },
  {
    "title": "Triangle",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Best Time to Buy and Sell Stock",
    "company": ["Facebook", "Amazon", "Microsoft", "Uber"],
    "difficulty": "Easy",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Best Time to Buy and Sell Stock II",
    "company": ["Facebook"],
    "difficulty": "Easy",
    "topics": ["Array", "Dynamic Programming", "Greedy"]
  },
  {
    "title": "Best Time to Buy and Sell Stock III",
    "company": ["Amazon", "Microsoft"],
    "difficulty": "Hard",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Binary Tree Maximum Path Sum",
    "company": ["Google", "Facebook"],
    "difficulty": "Hard",
    "topics": ["Tree", "Depth-First Search", "Dynamic Programming", "Binary Tree"]
  },
  {
    "title": "Valid Palindrome",
    "company": ["Facebook", "Microsoft", "Uber"],
    "difficulty": "Easy",
    "topics": ["String", "Two Pointers"]
  },
  {
    "title": "Word Ladder",
    "company": ["Amazon", "LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "String", "Breadth-First Search"]
  },
  {
    "title": "Word Ladder II",
    "company": ["Amazon"],
    "difficulty": "Hard",
    "topics": ["Array", "Hash Table", "String", "Backtracking", "Breadth-First Search"]
  },
  {
    "title": "Longest Consecutive Sequence",
    "company": ["Google", "Facebook"],
    "difficulty": "Hard",
    "topics": ["Array", "Hash Table", "Union Find"]
  },
  {
    "title": "Sum Root to Leaf Numbers",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Tree", "Depth-First Search", "Binary Tree"]
  },
  {
    "title": "Surrounded Regions",
    "company": ["Facebook", "Amazon", "Uber"],
    "difficulty": "Medium",
    "topics": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"]
  },
  {
    "title": "Palindrome Partitioning",
    "company": [],
    "difficulty": "Medium",
    "topics": ["String", "Dynamic Programming", "Backtracking"]
  },
  {
    "title": "Palindrome Partitioning II",
    "company": [],
    "difficulty": "Hard",
    "topics": ["String", "Dynamic Programming"]
  },
  {
    "title": "Clone Graph",
    "company": ["Facebook", "Amazon", "Uber"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "Depth-First Search", "Breadth-First Search", "Graph"]
  },
  {
    "title": "Gas Station",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Array", "Greedy"]
  },
  {
    "title": "Candy",
    "company": [],
    "difficulty": "Hard",
    "topics": ["Array", "Greedy"]
  },
  {
    "title": "Single Number",
    "company": ["Facebook", "Airbnb"],
    "difficulty": "Easy",
    "topics": ["Array", "Bit Manipulation"]
  },
  {
    "title": "Single Number II",
    "company": ["Google"],
    "difficulty": "Medium",
    "topics": ["Array", "Bit Manipulation"]
  },
  {
    "title": "Copy List with Random Pointer",
    "company": ["Amazon", "Uber"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "Linked List"]
  },
  {
    "title": "Word Break",
    "company": ["Google", "Facebook", "Amazon", "Uber"],
    "difficulty": "Medium",
    "topics": ["Array", "Hash Table", "String", "Dynamic Programming", "Trie"]
  },
  {
    "title": "Word Break II",
    "company": ["Google", "Facebook", "Uber", "Dropbox"],
    "difficulty": "Hard",
    "topics": ["Array", "Hash Table", "String", "Dynamic Programming", "Backtracking", "Trie"]
  },
  {
    "title": "Linked List Cycle",
    "company": ["Amazon", "Microsoft", "Apple"],
    "difficulty": "Easy",
    "topics": ["Hash Table", "Linked List", "Two Pointers"]
  },
  {
    "title": "Linked List Cycle II",
    "company": ["Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "Linked List", "Two Pointers"]
  },
  {
    "title": "Reorder List",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Linked List", "Two Pointers", "Stack", "Recursion"]
  },
  {
    "title": "Binary Tree Preorder Traversal",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Stack", "Tree", "Depth-First Search", "Binary Tree"]
  },
  {
    "title": "Binary Tree Postorder Traversal",
    "company": [],
    "difficulty": "Hard",
    "topics": ["Stack", "Tree", "Depth-First Search", "Binary Tree"]
  },
  {
    "title": "LRU Cache",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Apple", "Uber", "LinkedIn", "Dropbox"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"]
  },
  {
    "title": "Insertion Sort List",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Linked List", "Sorting"]
  },
  {
    "title": "Sort List",
    "company": ["Facebook", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Linked List", "Two Pointers", "Divide and Conquer", "Sorting", "Merge Sort"]
  },
  {
    "title": "Max Points on a Line",
    "company": ["LinkedIn", "Twitter"],
    "difficulty": "Hard",
    "topics": ["Array", "Hash Table", "Math", "Geometry"]
  },
  {
    "title": "Evaluate Reverse Polish Notation",
    "company": ["LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Array", "Stack"]
  },
  {
    "title": "Reverse Words in a String",
    "company": ["Facebook", "Amazon", "Microsoft", "Apple"],
    "difficulty": "Medium",
    "topics": ["String", "Two Pointers"]
  },
  {
    "title": "Reverse Words in a String II",
    "company": ["Amazon"],
    "difficulty": "Medium",
    "topics": ["String", "Two Pointers"]
  },
  {
    "title": "Maximum Product Subarray",
    "company": ["LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Find Minimum in Rotated Sorted Array",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search"]
  },
  {
    "title": "Find Minimum in Rotated Sorted Array II",
    "company": [],
    "difficulty": "Hard",
    "topics": ["Array", "Binary Search"]
  },
  {
    "title": "Min Stack",
    "company": ["Amazon", "Uber", "Google", "Bloomberg"],
    "difficulty": "Easy",
    "topics": ["Stack", "Design"]
  },
  {
    "title": "Intersection of Two Linked Lists",
    "company": ["Amazon", "Microsoft", "Airbnb"],
    "difficulty": "Easy",
    "topics": ["Hash Table", "Linked List", "Two Pointers"]
  },
  {
    "title": "Find Peak Element",
    "company": ["Google"],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search"]
  },
  {
    "title": "Missing Ranges",
    "company": ["Google", "Facebook"],
    "difficulty": "Easy",
    "topics": ["Array"]
  },
  {
    "title": "Largest Number",
    "company": [],
    "difficulty": "Medium",
    "topics": ["String", "Greedy", "Sorting"]
  },
  {
    "title": "Two Sum II - Input array is sorted",
    "company": ["Amazon"],
    "difficulty": "Easy",
    "topics": ["Array", "Two Pointers", "Binary Search"]
  },
  {
    "title": "Excel Sheet Column Title",
    "company": ["Facebook", "Microsoft"],
    "difficulty": "Easy",
    "topics": ["Math", "String"]
  },
  {
    "title": "Majority Element",
    "company": ["Adobe"],
    "difficulty": "Easy",
    "topics": ["Array", "Hash Table", "Divide and Conquer", "Sorting", "Counting"]
  },
  {
    "title": "Excel Sheet Column Number",
    "company": ["Microsoft", "Uber"],
    "difficulty": "Easy",
    "topics": ["Math", "String"]
  },
  {
    "title": "Factorial Trailing Zeroes",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Math"]
  },
  {
    "title": "Binary Search Tree Iterator",
    "company": ["Facebook", "Microsoft", "LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Stack", "Tree", "Design", "Binary Search Tree", "Binary Tree", "Iterator"]
  },
  {
    "title": "Dungeon Game",
    "company": ["Google", "Uber"],
    "difficulty": "Hard",
    "topics": ["Array", "Dynamic Programming", "Matrix"]
  },
  {
    "title": "Largest BST Subtree",
    "company": ["Amazon"],
    "difficulty": "Medium",
    "topics": ["Tree", "Depth-First Search", "Dynamic Programming", "Binary Search Tree", "Binary Tree"]
  },
  {
    "title": "Fraction to Recurring Decimal",
    "company": ["Google"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "Math", "String"]
  },
  {
    "title": "Two Sum III - Data structure design",
    "company": ["LinkedIn"],
    "difficulty": "Easy",
    "topics": ["Array", "Hash Table", "Design", "Two Pointers"]
  },
  {
    "title": "Highest Peak",
    "company": ["Google"],
    "difficulty": "Medium",
    "topics": ["Array", "Breadth-First Search", "Matrix"]
  },
  {
    "title": "Compare Version Numbers",
    "company": ["Microsoft", "Apple"],
    "difficulty": "Medium",
    "topics": ["String", "Two Pointers"]
  },
  {
    "title": "Maximum Gap",
    "company": [],
    "difficulty": "Hard",
    "topics": ["Array", "Bucket Sort", "Radix Sort", "Sorting"]
  },
  {
    "title": "Repeated DNA Sequences",
    "company": ["LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "String", "Bit Manipulation", "Sliding Window", "Rolling Hash", "Hash Function"]
  },
  {
    "title": "Best Time to Buy and Sell Stock IV",
    "company": [],
    "difficulty": "Hard",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Rotate Array",
    "company": ["Amazon", "Microsoft"],
    "difficulty": "Easy",
    "topics": ["Array", "Math", "Two Pointers"]
  },
  {
    "title": "Reverse Bits",
    "company": ["Apple"],
    "difficulty": "Easy",
    "topics": ["Bit Manipulation", "Divide and Conquer"]
  },
  {
    "title": "Number of 1 Bits",
    "company": ["Microsoft", "Apple"],
    "difficulty": "Easy",
    "topics": ["Bit Manipulation", "Divide and Conquer"]
  },
  {
    "title": "House Robber",
    "company": ["LinkedIn", "Airbnb"],
    "difficulty": "Easy",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "House Robber II",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "Number of Islands",
    "company": ["Facebook", "Amazon", "Microsoft", "Google", "Bloomberg"],
    "difficulty": "Medium",
    "topics": ["Array", "Depth-First Search", "Breadth-First Search", "Union Find", "Matrix"]
  },
  {
    "title": "Binary Tree Right Side View",
    "company": ["Facebook", "Amazon"],
    "difficulty": "Medium",
    "topics": ["Tree", "Depth-First Search", "Breadth-First Search", "Binary Tree"]
  },
  {
    "title": "Bitwise AND of Numbers Range",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Bit Manipulation"]
  },
  {
    "title": "Happy Number",
    "company": ["Uber", "Twitter"],
    "difficulty": "Easy",
    "topics": ["Hash Table", "Math", "Two Pointers"]
  },
  {
    "title": "Remove Linked List Elements",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Linked List", "Recursion"]
  },
  {
    "title": "Count Primes",
    "company": ["Microsoft"],
    "difficulty": "Easy",
    "topics": ["Array", "Math", "Number Theory"]
  },
  {
    "title": "Isomorphic Strings",
    "company": ["LinkedIn"],
    "difficulty": "Easy",
    "topics": ["Hash Table", "String"]
  },
  {
    "title": "Reverse Linked List",
    "company": ["Facebook", "Amazon", "Microsoft", "Apple", "Uber", "Adobe"],
    "difficulty": "Easy",
    "topics": ["Linked List", "Recursion"]
  },
  {
    "title": "Course Schedule",
    "company": ["Facebook", "Uber", "Affirm"],
    "difficulty": "Medium",
    "topics": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"]
  },
  {
    "title": "Course Schedule II",
    "company": ["Facebook", "Amazon"],
    "difficulty": "Medium",
    "topics": ["Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"]
  },
  {
    "title": "Implement Trie (Prefix Tree)",
    "company": ["Google", "Facebook", "Amazon", "Microsoft", "Uber"],
    "difficulty": "Medium",
    "topics": ["Hash Table", "String", "Design", "Trie"]
  },
  {
    "title": "Minimum Size Subarray Sum",
    "company": ["Facebook", "Amazon"],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"]
  },
  {
    "title": "Maximal Square",
    "company": ["Apple", "Airbnb"],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming", "Matrix"]
  },
  {
    "title": "Count Complete Tree Nodes",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Tree", "Depth-First Search", "Binary Search", "Binary Tree"]
  },
  {
    "title": "Rectangle Area",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Math", "Geometry"]
  },
  {
    "title": "Basic Calculator",
    "company": ["Google", "Facebook", "Amazon", "Microsoft"],
    "difficulty": "Hard",
    "topics": ["Math", "String", "Stack", "Recursion"]
  },
  {
    "title": "Basic Calculator II",
    "company": ["Facebook", "Airbnb"],
    "difficulty": "Medium",
    "topics": ["Math", "String", "Stack"]
  },
  {
    "title": "Contains Duplicate",
    "company": ["Amazon", "Adobe", "Airbnb"],
    "difficulty": "Easy",
    "topics": ["Array", "Hash Table", "Sorting"]
  },
  {
    "title": "Contains Duplicate II",
    "company": ["Amazon", "Adobe", "Airbnb"],
    "difficulty": "Easy",
    "topics": ["Array", "Hash Table", "Sliding Window"]
  },
  {
    "title": "Contains Duplicate III",
    "company": ["Amazon", "Adobe", "Airbnb"],
    "difficulty": "Medium",
    "topics": ["Array", "Sliding Window", "Sorting", "Bucket Sort", "Ordered Set"]
  },
  {
    "title": "The Skyline Problem",
    "company": ["Google", "Facebook", "Microsoft"],
    "difficulty": "Hard",
    "topics": ["Array", "Divide and Conquer", "Segment Tree", "Line Sweep", "Heap (Priority Queue)", "Ordered Set"]
  },
  {
    "title": "Kth Largest Element in an Array",
    "company": ["Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Divide and Conquer", "Sorting", "Heap (Priority Queue)", "Quickselect"]
  },
  {
    "title": "Shortest Palindrome",
    "company": ["Google", "Amazon"],
    "difficulty": "Hard",
    "topics": ["String", "Sliding Window", "Rolling Hash", "String Matching", "Hash Function"]
  },
  {
    "title": "Combination Sum III",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Array", "Backtracking"]
  },
  {
    "title": "Combination Sum IV",
    "company": ["Facebook"],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming"]
  },
  {
    "title": "House Robber III",
    "company": ["Uber"],
    "difficulty": "Medium",
    "topics": ["Tree", "Depth-First Search", "Dynamic Programming", "Binary Tree"]
  },
  {
    "title": "Majority Element II",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Array", "Hash Table", "Sorting", "Counting"]
  },
  {
    "title": "Kth Smallest Element in a BST",
    "company": ["Facebook", "Amazon", "Uber"],
    "difficulty": "Medium",
    "topics": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"]
  },
  {
    "title": "Power of Two",
    "company": [],
    "difficulty": "Easy",
    "topics": ["Math", "Bit Manipulation"]
  },
  {
    "title": "Palindrome Linked List",
    "company": ["Facebook", "Amazon"],
    "difficulty": "Easy",
    "topics": ["Linked List", "Two Pointers", "Stack", "Recursion"]
  },
  {
    "title": "Lowest Common Ancestor of a Binary Search Tree",
    "company": ["Facebook", "Amazon", "Microsoft", "Twitter"],
    "difficulty": "Easy",
    "topics": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"]
  },
  {
    "title": "Lowest Common Ancestor of a Binary Tree",
    "company": ["Facebook", "Amazon", "Microsoft", "LinkedIn"],
    "difficulty": "Medium",
    "topics": ["Tree", "Depth-First Search", "Binary Tree"]
  },
  {
    "title": "Delete Node in a Linked List",
    "company": ["Microsoft", "Apple"],
    "difficulty": "Easy",
    "topics": ["Linked List"]
  },
  {
    "title": "Product of Array Except Self",
    "company": ["Facebook", "Amazon", "Microsoft", "LinkedIn", "Apple", "Uber"],
    "difficulty": "Medium",
    "topics": ["Array", "Prefix Sum"]
  },
  {
    "title": "Sliding Window Maximum",
    "company": ["Google", "Facebook", "Amazon"],
    "difficulty": "Hard",
    "topics": ["Array", "Queue", "Sliding Window", "Heap (Priority Queue)", "Monotonic Queue", "Deque"]
  },
  {
    "title": "Search a 2D Matrix II",
    "company": ["Amazon"],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search", "Divide and Conquer", "Matrix"]
  },
  {
    "title": "Different Ways to Add Parentheses",
    "company": [],
    "difficulty": "Medium",
    "topics": ["Math", "String", "Dynamic Programming", "Recursion", "Memoization"]
  },
  {
    "title": "Valid Anagram",
    "company": ["Amazon", "Uber"],
    "difficulty": "Easy",
    "topics": ["Hash Table", "String", "Sorting"]
  },
  {
    "title": "Missing Number",
    "company": ["Amazon", "Microsoft"],
    "difficulty": "Easy",
    "topics": ["Array", "Hash Table", "Math", "Bit Manipulation", "Sorting"]
  },
  {
    "title": "Alien Dictionary",
    "company": ["Google", "Facebook", "Amazon", "Twitter", "Airbnb", "Snapchat"],
    "difficulty": "Hard",
    "topics": ["Array", "String", "Depth-First Search", "Breadth-First Search", "Graph", "Topological Sort"]
  },
  {
    "title": "Closest Binary Search Tree Value",
    "company": ["Google", "Microsoft", "Amazon"],
    "difficulty": "Easy",
    "topics": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Search", "Binary Tree"]
  },
  {
    "title": "Inorder Successor in BST",
    "company": ["Facebook", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Tree", "Depth-First Search", "Binary Search Tree", "Binary Tree"]
  },
  {
    "title": "Longest Increasing Subsequence",
    "company": ["Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Binary Search", "Dynamic Programming"]
  },
  {
    "title": "Move Zeroes",
    "company": ["Facebook", "Bloomberg"],
    "difficulty": "Easy",
    "topics": ["Array", "Two Pointers"]
  },
  {
    "title": "Peeking Iterator",
    "company": ["Google", "Facebook", "Apple", "Yahoo"],
    "difficulty": "Medium",
    "topics": ["Array", "Design", "Iterator"]
  },
  {
    "title": "Find the Duplicate Number",
    "company": ["Google", "Amazon", "Microsoft"],
    "difficulty": "Medium",
    "topics": ["Array", "Two Pointers", "Binary Search", "Bit Manipulation"]
  },
  {
    "title": "Word Pattern",
    "company": ["Dropbox"],
    "difficulty": "Easy",
    "topics": ["Hash Table", "String"]
  },
  {
    "title": "Game of Life",
    "company": ["Google", "Facebook", "Uber", "Snapchat", "Dropbox"],
    "difficulty": "Medium",
    "topics": ["Array", "Matrix", "Simulation"]
  },
  {
    "title": "Best Time to Buy and Sell Stock with Cooldown",
    "company": ["Facebook"],
    "difficulty": "Medium",
    "topics": ["Array", "Dynamic Programming"]
  }
]
